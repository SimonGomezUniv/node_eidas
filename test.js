import { decodeSdJwt, getClaims } from '@sd-jwt/decode';
import { digest } from '@sd-jwt/crypto-nodejs';

(async () => {
  const sdjwt =
    'eyJ0eXAiOiJ2YytzZC1qd3QiLCJ4NWMiOlsiTUlJQjlUQ0NBWnlnQXdJQkFnSVVOVFNweitPOUlVK1c4dENMeHJ3L2NEMzNRUFF3Q2dZSUtvWkl6ajBFQXdJd1V6RUxNQWtHQTFVRUJoTUNSMUl4Q3pBSkJnTlZCQWdNQWtkU01SQXdEZ1lEVlFRS0RBZFZRV1ZuWldGdU1SQXdEZ1lEVlFRTERBZFZRV1ZuWldGdU1STXdFUVlEVlFRRERBcDFZV1ZuWldGdUxtZHlNQjRYRFRJMU1ESXlOREV3TVRZeE9Gb1hEVEkyTURJeU5ERXdNVFl4T0Zvd1V6RUxNQWtHQTFVRUJoTUNSMUl4Q3pBSkJnTlZCQWdNQWtkU01SQXdEZ1lEVlFRS0RBZFZRV1ZuWldGdU1SQXdEZ1lEVlFRTERBZFZRV1ZuWldGdU1STXdFUVlEVlFRRERBcDFZV1ZuWldGdUxtZHlNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVkTUx0TUhNK2JZZGlKUkhKbWZBN3lwaWhTOEpEQW1jaTRxM0ZPZUx5Nm1EeGxlSGQwNnd1Z2tWUFZqb1g3NGVCSHE0R093NkorZE1pS0pXZEIrQ2hhNk5PTUV3d0t3WURWUjBSQkNRd0lvSU5aSE56TG1GbFoyVmhiaTVuY29JUmQzZDNMbVJ6Y3k1aFpXZGxZVzR1WjNJd0hRWURWUjBPQkJZRUZGU0tXOVVlV3daUXFlaEYrSTJWUzhKOXBTZkxNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJR204a3Y4ZlBhQmVCL3B4WkxTcHNRdzVlL0RHYzY4dklreXJxdDNHanhUUkFpQjBjeUcxdEJrS0ZUazVzRUh4c2MrbnZCQkNrcVJaa3V0N1ByelJvc2xscnc9PSJdLCJhbGciOiJFUzI1NiJ9.eyJpc3MiOiJodHRwczovL2Rzcy5hZWdlYW4uZ3IiLCJpYXQiOjE3NDYwMDYxNzAsIm5iZiI6MTc0NjAwNjE3MCwiZXhwIjoxNzQ4NTk4MTcwLCJ2Y3QiOiJldS5ldXJvcGEuZWMuZXVkaS5waG90b2lkLjEiLCJpZCI6ImMwNWJmNzUzLWJiNzAtNGZkYS1iMGQ1LTgyZDE2ZjhlZDE0ZSIsImlzbzIzMjIwIjp7Il9zZCI6WyItckR1dG1EZ0tRUS1PRW5iRGE0TWt0ZW84azVHZmxVSmdqQzRWRmp5aXRBIiwiMElRdVdPS1hZckZ1LV9zY1BacFJ3dEdXd2ZiSHpHWEZqaE84b2FaWl9xWSIsIjg4X0hRSDlYejYydEtKYTRBX1M0amNsRk41NWNLYnpmLW5DOTlhWDE5REEiLCI5V3AtS05YclIxQWE1OWNudE5pOVdQNTdyc2NyUFhTbk9yQjNzdDFqcVh3IiwiQ1RvUUtPaDZTVmZERThnYXdKX2twSUhOWUJVMC1JSnRhek1iN3ZGNHlIOCIsIkRZYm9rVWlLZjZnYVNqSHdQbGk5QWctS2JtNmxnbUludEZTRGVaTzUxZW8iLCJGNUJaUlFqazc4M3RXYkR6bVMzLXpCR0U3WTBqQmlwb3NfSUhVOWJrOG1VIiwiSUVMd2lBRVZnUVNqSnFib3E1RUFTMktXT3Y3NGRmdVUyOTlOSkYtX2J3MCIsIk1pLXZJZVFFY3NZcjJ3T0IyYVpoeUpab2hYYXJVZURZNHB1aEdNM0szZm8iLCJSTlZoZHNjUUhuZncxTHUxTWFvaml3ci1qU3NHWGhtVGNFeEpxaC01LVFVIiwiUzRwVkpHQWtRYU8tUTJDTk5HWTRXdWhNRXBBSnZkMlpEWUE5TUhsZ09ObyIsIlV3YzZoMWNoNEFLbDg4M3RpOWFOOC1mdU5RZmEwcXpObjJGLVNRVkpXU1EiLCJabHJQNXg4NnBoaHFLNTdaaUpvekVmUnV1dmh3Z2V2Njh3d3lUZkF3NDZrIiwiYksyRHQwTGpRSUE5Y3lXU2xXMDN5azNvVkIzNWZZdGoweEFweEYzaXBiNCIsImJNYTJwSVlPQnk1bi1OWDBqOWVmV3hlN1JNaFc3cm5YcENobGRTczBmMVkiLCJkV0hab2o5MlBnZWFjZmVydng5bFRVLWsxUXJrMVFiT2t5OU16OXJyeXBvIiwiazhJSC1JRlVGR1N6REM4UEhBVmsxZnJJdEpTX3BncDQxZmJtTE9PcFRwUSIsImtiRlJvMW9UZV96ZjQxZ0VESkJOMXdvRzduUW01X2ZPWVZ1OE9jTDBZX2ciLCJxWTVTNXhkU0ZybDFoUDZCbHFZellsRzJucGpIR1lKbERpRmhRb1lkeTNVIiwic1dXNzdRczBLZ3hiRlQwdlhPLXhFc2tuNlhpR3dhWlZ4TG03a003RWZVOCIsInhfbnZtVmFpeEgyMDUxc21WUnBLRk9kLTJ5NjY1aS1wQzRYQkk3UGF4OG8iLCJ5Z3FaM3V0VDhBRTBnQ3I1Y1BWcUNpWEhGcHhoa3F2QUViRndpeW9HcGZjIiwienNibjhsMUdTXzBEQlJZZzRtaENvM0xkSkM2MmpaeDdlcWVLVDVvSjNMRSJdfSwicGhvdG9pZCI6eyJfc2QiOlsiMjV5SUt0dVRGSW9yOXZfeGxtQlhXLUVISmZ2Q1pCamVtRy1oSVljRUxSbyIsIjJhbFU0NUtTVU80Q2l2MTNYd0EyQmU4QnZTaE9oM3dKOVFKcDVZR2lHMmMiLCJDWnNHQ0I2YkNWM1pTZkIzcXlCa2p4MjAxa0RjUFFPWnJaRjJkQlV5RkRFIiwiRERNb3N5NWRiVmJCMjN5cGZjSGo3WEZYejBDdWNuYlZzdWZ2U1BQSjh1OCIsIkVNOWxDS0p0bEEwY25aLUxuYWRUTm5tV0tKTmZiTnJzbGJadW5XTlhUSjQiLCJNUjMzU3pFOEt1RDNRX0x3bV9HdHpTRkpYRktzakpJRWZvaER1MHR6Y1lzIiwiUWxLZ092OUVVUGtpUzNJVG1kdGp2MEltRzdFTXdYZjFFbUNlbmpfbE5iUSIsIlhydldFdDROdjcwX1Q3M2tEZnVBbG90UjdlUjVxTzFFZzJNVGpqTGd0SWsiLCJaT3NoN2hFQ2RGRS1XMXpHbVJZckhlQ09GeVVIYjFLeEFzVk5Ca1dOZXJNIl19LCJkdGMiOnsiX3NkIjpbIjVoVjhCR0xSN1YyR1FlU01jdm1KdG1LUGs2d0UwTjJaWm5wWUdSWUVRREEiLCJIZ1UycWlOdTA0d1RvUXdId2YzX3I5WG8yU0N2WDA3RkYxVkM1NExRWkpZIiwiUllLcXZzTDd2QTJ0bzRuTnpjSWFxLTE3SVZWS2pRdm4ydkhrcDlmWmJ4OCIsIlZ3aDkyR3VwMGxWQTVRbklmbDJqeHFVNjZaUVdJMjhHMmhEQlM0N01xX00iLCJYWHZzT1BicjlRd3RYUlpTRlJQbXJldDRSckhFLW95dl91T053QlJ6OXpFIiwiWTVWZ1ZSZTNUZ0ZKVjBDc3p6VzRMR1hhTERrd09JSnRkcUtqS2UyeGc0ZyIsImtMYWM0ZVJubEhBNXFZQUNGNkFNZGwyYTUxYWhLS1dfeG5mdm9WTzZGNG8iLCJ3Y0N4SmVQbzRSTDBpZzhOMURteHQxWWVST2tVY1AtNHZBQTNQZUJrcy1rIl19LCJjbmYiOnsiandrIjp7ImNydiI6IlAtMjU2Iiwia3R5IjoiRUMiLCJ4IjoialFiZUN1T1FnUklrLVZPTE9RT2NDWnVRcVRvYVM0bGpIeWlGdzlBVklyVSIsInkiOiJtSXBJUUd4TlpMekpSUWR0RnNWcFVLVVZIMVpPWGhKM2VXVkVnSENmUXVzIn19LCJfc2RfYWxnIjoic2hhLTI1NiJ9.LCemNJGyoU23K7wo-Ke19hz-rFMktAqsC7gZYhpnOzNgayb49wUbejSoKwW70TwRKvPHthFhGf7S5rBNHltIPA~~eyJhbGciOiJFUzI1NiIsInR5cCI6ImtiK2p3dCJ9.eyJpYXQiOjE3NDYwNTAwOTUsImV4cCI6MTc0NjA1MDk5NSwiYXVkIjoiZGlkOndlYjp5b3VyLXJwLmV4YW1wbGUuY29tIiwibm9uY2UiOiJkZW1vLW5vbmNlLTEyMzQ1Iiwic2RfaGFzaCI6ImFHOE1aUmp4NVNvcHZuMTRSQndwSkJQUjNyZ0RWeWc0RkR3RURuMzlWUkkiLCJpc3MiOiJkaWQ6a2V5OnoyZG16RDgxY2dQeDhWa2k3SmJ1dU1tRllyV1BnWW95dHlrVVozZXlxaHQxajlLYnJ2NDZiNWhEWGkzdlFMTm5FY29aRlFLMnRSeFFzTFVaeGl3WTdLS21wc21CVjR4amtMOXAzbTQzejZCQjRkaVRKZEJnZ0p1UEdNS1p4dWR3S2NlZGFnTnIydVF2Nm54S1FHNEZKYU54azRDYVRIbnNNUHE1VW5ONXhIdVRCbWl5ZlMifQ.w49CdCGRmjav8p2R7ip85SbSELkyek_mimINLkJSry8L5wDbqx0yEnSshSGR86IspoTXAa6cO-ShD1XeTNNV4w';
  const decodedSdJwt = await decodeSdJwt(sdjwt, digest);
  console.log('The decoded SD JWT is:');
  console.log(JSON.stringify(decodedSdJwt, null, 2));
  console.log(
    '================================================================',
  );

  // Get the claims from the SD JWT
  const claims = await getClaims(
    decodedSdJwt.jwt.payload,
    decodedSdJwt.disclosures,
    digest,
  );

  console.log('The claims are:');
  console.log(JSON.stringify(claims, null, 2));
})();